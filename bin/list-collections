#!/usr/bin/python
# Show the expenses for this year

from sys import stdin

# Read text into an array of lines
def read_input():
    return  [line[:-1] for line in stdin.readlines()]

# Split each line into columns
def create_table(text):
    return map (lambda x: x.split(','), text)  

# Join the columns of text with tabs to form one row
def format_row(row):
    return '\t'.join(row)

# Join row together as text
def format_table(table):
    return '\n'.join (map(format_row, table))

# Print a table of row and columns
def print_table(table):
    print format_table(table)

# Remove any extra spaces
def read_int_values(row):
    return map(lambda x: int(x), row)

# Calculate the dollar values of these counts
def dollar_value(amounts):
    v = [500,100,25,10,5,0,0]
    value = map(lambda x: x[0]*x[1], zip(v,amounts))
    return reduce(lambda x,y: x+y, value)

# Calculate receipts for one station
def station_receipts(counts):
    return dollar_value(read_int_values(counts))/100

# Gather the sales for all rows
def collections_row(row):
    return [  row[1], station_receipts(row[2:10]) + station_receipts(row[10:18]), station_receipts(row[18:26]) ]

# Select out the total sales for all rows (water,ice)
def total_sales(row):
    r = collections_row(row)
    return r[1],r[2]

# Gather all sales for this unit
def collect_sales(table):
    return  map(total_sales, table)

# Print the total sales from this unit
def print_total_sales(table):
    sales = reduce (lambda x,y: (x[0]+y[0], x[1]+y[1]), collect_sales(table))
    print table[0][0], sales[0], sales[1]

# Print all of the collections
def print_collections(table):
    for row in table:
        print collections_row(row)  

# Process all text in a known file
def create_collection_listing():
    table = read_input()
    table = create_table(table)
    #print_table(table)
    #print_collections(table)
    print_total_sales(table)

create_collection_listing() 
