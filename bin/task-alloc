#!/usr/bin/env python
# Format an time allocation statement
from sys import stdin


# Read one number from a column
def num(s):
    s = s.strip()
    if s!='':
        return int(s)
    else:
        return 0


# Read a row of fixed columns
def read_row(i):
    return [ i[:10], num(i[10:13]), num(i[14:17]), num(i[18:21]), num(i[22:25]), num(i[26:29])  ]


# Print a valid entry for one row
def print_row(i):
    print "%-6s %2d %3d %3d %3d %3d" % (i[0],i[1],i[2],i[3],i[4],i[5]),
    print "   %5d" % sum(i[1:])


# Repeat the char n times
def repeat_chars(char,num):
    return ''.join([ char for i in range(num) ])


# Print summary of rows
def print_summary(total):
    print "%-6s" % ('         '), 
    print "%3d %3d %3d %3d %3d" % (total[0],total[1],total[2],total[3],total[4]),
    print "   %5d" % (sum(total))
    print
    #print 'w=%d, p=%d, a=%d, s=%d' % (total[0],total[1],total[2],total[3])
    print repeat_chars('i',total[4]),
    print repeat_chars('p',total[1]),
    print repeat_chars('w',total[0]),
    print repeat_chars('a',total[2]),
    print repeat_chars('s',total[3])
    print repeat_chars('.',14),'|', repeat_chars('.',14),'|',
    print repeat_chars('.',7),'|',  repeat_chars('.',6),'|',
    print 


# Create counters for each column
def print_totals(text):
    total = [ 0 for i in range(5) ]
    print '            w   p   a   s   i'
    rows = text.split("\n")
    for row in rows:
        if len(row)>1:
            i = read_row(row)
            print_row(i)
            total[0] += i[1]
            total[1] += i[2]
            total[2] += i[3]
            total[3] += i[4]
            total[4] += i[5]
    print_summary(total)


# Run the primary function
print_totals(stdin.read())
